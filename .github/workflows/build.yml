name: Build

on:
  workflow_dispatch:
    inputs:
      VERSION:
        description: 'version to tag image'
        required: true
        type: string
      NAME:
        description: 'Name of the project'
        required: true
        default: 'umbrelOs'
        type: string
      resumeUrl:
        description: 'Webhook call when all finish'
        required: true
        type: string

concurrency:
  group: build
  cancel-in-progress: false

jobs:
  shellcheck:
    name: Test
    uses: ./.github/workflows/check.yml
  build:
    name: Build
    needs: shellcheck
    runs-on: ubuntu-latest
    permissions:
      actions: read
      packages: read
      contents: read
    steps:
      # Build Docker images
      - name: Finish when found
        run: |
          #!/bin/bash
          beta="false"

          [[ "${{ inputs.VERSION }}" == *"rc"* ]] && beta="true"
          [[ "${{ inputs.VERSION }}" == *"beta"* ]] && beta="true"

          echo "beta=${beta}" >> $GITHUB_ENV
      - name: Checkout
        if: inputs.VERSION
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Docker metadata
        if: inputs.VERSION
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: git
          images: ${{ secrets.DOCKERHUB_REPO }}
          tags: |
            type=raw,value=latest,priority=100,enable=${{ env.beta == 'false' }}
            type=raw,value=${{ inputs.VERSION }}
          labels: |
            org.opencontainers.image.title=${{ inputs.NAME }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index     
      - name: Set up Docker Buildx
        if: inputs.VERSION
        uses: docker/setup-buildx-action@v3
      - name: Login into Docker Hub
        if: inputs.VERSION
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image
        if: inputs.VERSION
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            VERSION_ARG=${{ steps.meta.outputs.version }}
      - name: Hook when success
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ inputs.resumeUrl }}
          data: '{ "success": true}'
      - name: Hook when failed
        if: failure()
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ inputs.resumeUrl }}
          data: '{ "success": false}'
